% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/turbo_code_rcpp.R
\name{TurboGetPermutation}
\alias{TurboGetPermutation}
\title{Function to generate a permutation vector.}
\usage{
TurboGetPermutation(message.length, coder.info, type = "RANDOM",
  args = NULL, visualize = FALSE)
}
\arguments{
\item{message.length}{Length of message which will be encoded.}

\item{coder.info}{Coder which will be used for encoding and decoding.}

\item{type}{Type of the interleaver, possibilities: RANDOM, PRIMITIVE, CYCLIC, BLOCK
HELICAL, DIAGONAL.}

\item{args}{Arguments for some interleaver. (must be a list)}

\item{visualize}{Flag to visualize the resulting permutation matrix/vector.}
}
\value{
Created permutation vector.
}
\description{
This function is a helper function which helps the user to create different permutation
vectors. With the argument \code{type} the user can choose one of 6 different interleaver types.
Some interleaver need additional informations in the \code{args} argument.
}
\details{
\itemize{
  \item RANDOM: Creates a random permutation vector. No arguments in \code{args}.
  \item PRIMITIVE: Shift the initial vector (\code{c(1,2,3,...)}) so that the \code{args$root}
                   value is the index of the 1.
  \item CYCLIC: Creates a initial matrix with the arguments \code{args$cols}, \code{args$rows}
                and shift each row of the matrix by the index of the row multiplied by the \code{args$distance}.
                The resulting permutation vector is read out from top to bottom from each column of the matrix.
  \item BLOCK: This is a type of interleaver in which the bits are read in from left to right in each row from the matrix
               and read out from top to bottom each column. With the arguments \code{args$cols}, \code{args$rows}
               the user can change the matrix size.
  \item HELICAL: This is a type of interleaver in which the bits are read in from left to right in each row from the matrix
               and read out from left top to bottom right. When the last row of the matrix is arrived
               then the next bit is read out from the first row but from the next column. With the arguments \code{args$cols}, \code{args$rows}
               the user can change the matrix size.
  \item DIAGNOAL: The difference to the HELICAL interleaver is that when the last row is arrived
                  the next bit is in the first row and the first unused column. With the arguments \code{args$cols}, \code{args$rows}
               the user can change the matrix size.
}
}

